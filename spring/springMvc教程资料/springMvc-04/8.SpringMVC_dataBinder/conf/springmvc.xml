<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<context:component-scan base-package="com.atguigu"></context:component-scan>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 默认前端控制器是拦截所有资源（除过jsp），js文件就404了；要js文件的请求是交给tomcat处理的
	http://localhost:8080/7.SpringMVC_crud/scripts/jquery-1.9.1.min.js -->
	<!-- 告诉SpringMVC，自己映射的请求就自己处理，不能处理的请求直接交给tomcat -->
	<!-- 静态资源能访问，动态映射的请求就不行 -->
	<mvc:default-servlet-handler/>
	<!-- springmvc可以保证动态请求和静态请求都能访问 -->
	
	<!-- conversion-service="conversionService"：使用我们自己配置的类型转换组件 -->
	<mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>
	
	<!-- 告诉SpringMVC别用默认的ConversionService，
			而用我自定义的ConversionService、可能有我们自定义的Converter； -->
	<!-- 以后写自定义类型转换器的时候，就使用FormattingConversionServiceFactoryBean来注册；
	既具有类型转换还有格式化功能 -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!--converters转换器中添加我们自定义的类型转换器  -->
		<property name="converters">
			<set>
				<bean class="com.atguigu.component.MyStringToEmployeeConverter"></bean>
			</set>
		</property>
	</bean>
	
	<!-- 管理国际化资源文件 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="errors"></property>
	</bean>
</beans>
