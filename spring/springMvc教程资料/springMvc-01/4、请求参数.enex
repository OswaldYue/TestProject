<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20170619T091705Z" application="Evernote/Windows" version="6.x">
<note><title>4、请求参数</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>入参处理：</div><div><br/></div><div style="-en-codeblock: true; box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902); background-position: initial initial; background-repeat: initial initial;"><div>package com.atguigu.controller;</div><div><br/></div><div>import java.io.BufferedReader;</div><div>import java.io.IOException;</div><div>import java.io.PrintWriter;</div><div><br/></div><div>import javax.servlet.ServletInputStream;</div><div>import javax.servlet.ServletOutputStream;</div><div>import javax.servlet.http.HttpServletRequest;</div><div>import javax.servlet.http.HttpServletResponse;</div><div>import javax.servlet.http.HttpSession;</div><div><br/></div><div>import org.springframework.stereotype.Controller;</div><div>import org.springframework.web.bind.annotation.CookieValue;</div><div>import org.springframework.web.bind.annotation.RequestHeader;</div><div>import org.springframework.web.bind.annotation.RequestMapping;</div><div>import org.springframework.web.bind.annotation.RequestParam;</div><div><br/></div><div>import com.atguigu.book.Book;</div><div><br/></div><div>@Controller</div><div>public class HelloController {</div><div><br/></div><div>&nbsp; &nbsp; /**</div><div>&nbsp; &nbsp; &nbsp;* request.getParameter(&quot;&quot;).....</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;* @return</div><div>&nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; @RequestMapping(&quot;/hello&quot;)</div><div>&nbsp; &nbsp; public String handle01() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&quot;handle01...&quot;);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; return &quot;success&quot;;</div><div>&nbsp; &nbsp; }</div><div><br/></div><div>&nbsp; &nbsp; /**</div><div>&nbsp; &nbsp; &nbsp;* SpringMVC如何获取请求带来的各种信息 默认方式获取请求参数： 直接给方法入参上写一个和请求参数名相同的变量。这个变量就来接收请求参数的值；</div><div>&nbsp; &nbsp; &nbsp;* 带：有值，没带：null；</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;* @RequestParam：获取请求参数的；参数默认是必须带的；</div><div>&nbsp; &nbsp; &nbsp;* @RequestParam(&quot;user&quot;)String username username =</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;request.getParameter(&quot;user&quot;)</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;* @RequestParam(&quot;user&quot;)</div><div>&nbsp; &nbsp; &nbsp;* @PathVariable(&quot;user&quot;)</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/book/【{user}pathvariable】?【user=admin(requestparam)</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;】</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;value:指定要获取的参数的key required:这个参数是否必须的</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;defaultValue:默认值。没带默认是null；</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;* @RequestHeader：获取请求头中某个key的值； request.getHeader(&quot;User-Agent&quot;)；</div><div>&nbsp; &nbsp; &nbsp;* @RequestHeader(&quot;User-Agent&quot;)String userAgent userAgent =</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; request.getHeader(&quot;User-Agent&quot;)</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 如果请求头中没有这个值就会报错； value() required()</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; defaultValue()</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;* @CookieValue：获取某个cookie的值； 以前的操作获取某个cookie； Cookie[] cookies =</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; request.getCookies(); for(Cookie c:cookies){</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(c.getName().equals(&quot;JSESSIONID&quot;)){ String</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cv = c.getValue(); } }</div><div>&nbsp; &nbsp; &nbsp;* value()</div><div>&nbsp; &nbsp; &nbsp;* required()</div><div>&nbsp; &nbsp; &nbsp;* defaultValue()</div><div>&nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; @RequestMapping(&quot;/handle01&quot;)</div><div>&nbsp; &nbsp; public String handle02(</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @RequestParam(value = &quot;user&quot;, required = false, defaultValue = &quot;你没带&quot;) String username,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @RequestHeader(value = &quot;AHAHA&quot;, required = false, defaultValue = &quot;她也没带&quot;) String userAgent,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @CookieValue(value=&quot;JSESSIONID&quot;,required=false)String jid) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&quot;这个变量的值：&quot; + username);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&quot;请求头中浏览器的信息：&quot; + userAgent);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&quot;cookie中的jid的值&quot;+jid);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; return &quot;success&quot;;</div><div>&nbsp; &nbsp; }</div><div><br/></div><div>&nbsp; &nbsp; /**</div><div>&nbsp; &nbsp; &nbsp;* 如果我们的请求参数是一个POJO；</div><div>&nbsp; &nbsp; &nbsp;* SpringMVC会自动的为这个POJO进行赋值？</div><div>&nbsp; &nbsp; &nbsp;* 1）、将POJO中的每一个属性，从request参数中尝试获取出来，并封装即可；</div><div>&nbsp; &nbsp; &nbsp;* 2）、还可以级联封装；属性的属性</div><div>&nbsp; &nbsp; &nbsp;* 3）、请求参数的参数名和对象中的属性名一一对应就行</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;* 提交的数据可能有乱码：</div><div>&nbsp; &nbsp; &nbsp;* 请求乱码：</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;GET请求：改server.xml；在8080端口处URIEncoding=&quot;UTF-8&quot;</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;POST请求：</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;在第一次获取请求参数之前设置</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;request.setCharacterEncoding(&quot;UTF-8&quot;);</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;自己写一个filter；SpringMVC有这个filter</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;* 响应乱码：</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;response.setContentType(&quot;text/html;charset=utf-8&quot;)</div><div>&nbsp; &nbsp; &nbsp;* @param book</div><div>&nbsp; &nbsp; &nbsp;* @return</div><div>&nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; @RequestMapping(&quot;/book&quot;)</div><div>&nbsp; &nbsp; public String addBook(Book book){</div><div>&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(&quot;我要保存的图书：&quot;+book);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; return &quot;success&quot;;</div><div>&nbsp; &nbsp; }</div><div><br/></div><div>&nbsp; &nbsp; /**</div><div>&nbsp; &nbsp; &nbsp;* SpringMVC可以直接在参数上写原生API;</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;* HttpServletRequest</div><div>&nbsp; &nbsp; &nbsp;* HttpServletResponse</div><div>&nbsp; &nbsp; &nbsp;* HttpSession</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;* java.security.Principal</div><div>&nbsp; &nbsp; &nbsp;* Locale：国际化有关的区域信息对象</div><div>&nbsp; &nbsp; &nbsp;* InputStream：</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ServletInputStream inputStream = request.getInputStream();</div><div>&nbsp; &nbsp; &nbsp;* OutputStream：</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ServletOutputStream outputStream = response.getOutputStream();</div><div>&nbsp; &nbsp; &nbsp;* Reader：</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;BufferedReader reader = request.getReader();</div><div>&nbsp; &nbsp; &nbsp;* Writer：</div><div>&nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;PrintWriter writer = response.getWriter();</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;* @throws IOException</div><div><br/></div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;*</div><div>&nbsp; &nbsp; &nbsp;*/</div><div>&nbsp; &nbsp; @RequestMapping(&quot;/handle03&quot;)</div><div>&nbsp; &nbsp; public String handle03(HttpSession session,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; HttpServletRequest request,HttpServletResponse response) throws IOException {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; request.setAttribute(&quot;reqParam&quot;, &quot;我是请求域中的&quot;);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; session.setAttribute(&quot;sessionParam&quot;, &quot;额我是Session域中的&quot;);</div><div><br/></div><div>&nbsp; &nbsp; &nbsp; &nbsp; return &quot;success&quot;;</div><div>&nbsp; &nbsp; }</div><div><br/></div><div>}</div></div><div><br/></div><div><br/></div></en-note>]]></content><created>20170619T081710Z</created><updated>20170619T091645Z</updated><note-attributes><author>雷丰阳</author><source>desktop.win</source><source-application>evernote.win32</source-application></note-attributes></note></en-export>
