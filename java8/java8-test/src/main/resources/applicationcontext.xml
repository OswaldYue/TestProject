<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.mgw"></context:component-scan>


    <!-- 开启基于注解的aop功能:aop名称空间 -->
<!--    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>-->

    <!-- 基于xml配置的aop -->
    <bean id="xmlAspect" class="com.mgw.aop.XmlAspect"></bean>

    <aop:config>

        <!-- 指定切面 -->
        <aop:aspect ref="xmlAspect">
            <aop:pointcut id="MyPointcut" expression="execution(public int com.mgw.aop.MyCaculator.muti(int , int))"/>
            <!-- 配置切面通知方法何时运行 -->
            <aop:before method="logBefore" pointcut="execution(public int com.mgw.aop.MyCaculator.muti(int , int))"></aop:before>

            <aop:after method="logAfter" pointcut-ref="MyPointcut"></aop:after>

            <aop:after-returning method="logReturn" pointcut-ref="MyPointcut" returning="result"></aop:after-returning>

            <aop:after-throwing method="logException" pointcut-ref="MyPointcut" throwing="e"></aop:after-throwing>

            <aop:around method="myAround" pointcut-ref="MyPointcut" ></aop:around>

        </aop:aspect>

    </aop:config>

    <!-- 开启基于注解的事务 -->
<!--    <tx:annotation-driven></tx:annotation-driven>-->

    <!-- 基于xml配置的tx管理 -->
    <bean id="bookServiceXml" class="com.mgw.tx.BookServiceXml"></bean>

    <!-- 配置出事务方法 让切面按照我们的切入点表达式切入事务 -->
    <aop:config>
        <aop:pointcut id="txPoint" expression="execution(* com.mgw.tx.BookServiceXml.*(..))"/>
        <!-- 事务增强 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"></aop:advisor>
    </aop:config>

    <!-- 配置事务管理器-->
    <tx:advice transaction-manager="dataSourceTransactionManager" id="txAdvice">
        <!-- 事务属性 -->
        <tx:attributes>
            <!-- 指明那些方法时事务方法;切入点表达式只是说,事务管理器要切入这些方法,那些方法要加事务是用<tx:method> -->
            <tx:method name="checkout" rollback-for="Exception.class"/>
            <tx:method name="get*" read-only="true"></tx:method>
        </tx:attributes>
    </tx:advice>


</beans>